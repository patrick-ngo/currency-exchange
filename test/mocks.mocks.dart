// Mocks generated by Mockito 5.4.4 from annotations
// in currency_exchange/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i9;

import 'package:currency_exchange/api/currency_api_service.dart' as _i3;
import 'package:currency_exchange/api/model/currency_api_response.dart' as _i2;
import 'package:currency_exchange/mvvm/currency_main_viewmodel.dart' as _i6;
import 'package:currency_exchange/mvvm/model/currency_enum.dart' as _i5;
import 'package:currency_exchange/mvvm/model/time_period_enum.dart' as _i7;
import 'package:fl_chart/fl_chart.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCurrencyApiResponse_0 extends _i1.SmartFake
    implements _i2.CurrencyApiResponse {
  _FakeCurrencyApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ICurrencyAPIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockICurrencyAPIService extends _i1.Mock
    implements _i3.ICurrencyAPIService {
  MockICurrencyAPIService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CurrencyApiResponse> fetchCurrencyData({
    required DateTime? startDate,
    required DateTime? endDate,
    required _i5.Currency? fromCurrency,
    required _i5.Currency? toCurrency,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCurrencyData,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
            #fromCurrency: fromCurrency,
            #toCurrency: toCurrency,
          },
        ),
        returnValue: _i4.Future<_i2.CurrencyApiResponse>.value(
            _FakeCurrencyApiResponse_0(
          this,
          Invocation.method(
            #fetchCurrencyData,
            [],
            {
              #startDate: startDate,
              #endDate: endDate,
              #fromCurrency: fromCurrency,
              #toCurrency: toCurrency,
            },
          ),
        )),
      ) as _i4.Future<_i2.CurrencyApiResponse>);
}

/// A class which mocks [ICurrencyMainViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockICurrencyMainViewModel extends _i1.Mock
    implements _i6.ICurrencyMainViewModel {
  MockICurrencyMainViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Currency get selectedFromCurrency => (super.noSuchMethod(
        Invocation.getter(#selectedFromCurrency),
        returnValue: _i5.Currency.usd,
      ) as _i5.Currency);

  @override
  _i5.Currency get selectedToCurrency => (super.noSuchMethod(
        Invocation.getter(#selectedToCurrency),
        returnValue: _i5.Currency.usd,
      ) as _i5.Currency);

  @override
  _i7.TimePeriod get selectedTimePeriod => (super.noSuchMethod(
        Invocation.getter(#selectedTimePeriod),
        returnValue: _i7.TimePeriod.oneWeek,
      ) as _i7.TimePeriod);

  @override
  double get selectedValueDifference => (super.noSuchMethod(
        Invocation.getter(#selectedValueDifference),
        returnValue: 0.0,
      ) as double);

  @override
  List<_i8.FlSpot> get chartData => (super.noSuchMethod(
        Invocation.getter(#chartData),
        returnValue: <_i8.FlSpot>[],
      ) as List<_i8.FlSpot>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void selectFromCurrency(_i5.Currency? currency) => super.noSuchMethod(
        Invocation.method(
          #selectFromCurrency,
          [currency],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void selectToCurrency(_i5.Currency? currency) => super.noSuchMethod(
        Invocation.method(
          #selectToCurrency,
          [currency],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void selectTimePeriod(_i7.TimePeriod? period) => super.noSuchMethod(
        Invocation.method(
          #selectTimePeriod,
          [period],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDateRange(
    DateTime? start,
    DateTime? end,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateDateRange,
          [
            start,
            end,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void swapCurrencies() => super.noSuchMethod(
        Invocation.method(
          #swapCurrencies,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTouchedValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #updateTouchedValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
